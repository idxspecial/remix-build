{
  "version": 3,
  "sources": ["browser-route-module:C:\\Projects\\remix-jokes\\app\\routes\\login.tsx?browser", "../../../app/routes/login.tsx"],
  "sourcesContent": ["export { default, links } from \"C:\\\\Projects\\\\remix-jokes\\\\app\\\\routes\\\\login.tsx\";", "import type { ActionFunction, LinksFunction } from \"remix\";\r\nimport {\r\n  useActionData,\r\n  json,\r\n  Link,\r\n  useSearchParams\r\n} from \"remix\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport { login, createUserSession } from \"~/utils/session.server\";\r\nimport stylesUrl from \"../styles/login.css\";\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\r\n};\r\n\r\nfunction validateUsername(username: unknown) {\r\n  if (typeof username !== \"string\" || username.length < 3) {\r\n    return `Usernames must be at least 3 characters long`;\r\n  }\r\n}\r\n\r\nfunction validatePassword(password: unknown) {\r\n  if (typeof password !== \"string\" || password.length < 6) {\r\n    return `Passwords must be at least 6 characters long`;\r\n  }\r\n}\r\n\r\ntype ActionData = {\r\n  formError?: string;\r\n  fieldErrors?: {\r\n    username: string | undefined;\r\n    password: string | undefined;\r\n  };\r\n  fields?: {\r\n    loginType: string;\r\n    username: string;\r\n    password: string;\r\n  };\r\n};\r\n\r\nconst badRequest = (data: ActionData) =>\r\n  json(data, { status: 400 });\r\n\r\nexport const action: ActionFunction = async ({\r\n  request\r\n}) => {\r\n  const form = await request.formData();\r\n  const loginType = form.get(\"loginType\");\r\n  const username = form.get(\"username\");\r\n  const password = form.get(\"password\");\r\n  const redirectTo = form.get(\"redirectTo\") || \"/jokes\";\r\n  if (\r\n    typeof loginType !== \"string\" ||\r\n    typeof username !== \"string\" ||\r\n    typeof password !== \"string\" ||\r\n    typeof redirectTo !== \"string\"\r\n  ) {\r\n    return badRequest({\r\n      formError: `Form not submitted correctly.`\r\n    });\r\n  }\r\n\r\n  const fields = { loginType, username, password };\r\n  const fieldErrors = {\r\n    username: validateUsername(username),\r\n    password: validatePassword(password)\r\n  };\r\n  if (Object.values(fieldErrors).some(Boolean))\r\n    return badRequest({ fieldErrors, fields });\r\n\r\n  switch (loginType) {\r\n    case \"login\": {\r\n      const user = await login({ username, password });\r\n      if (!user) {\r\n        return {\r\n          fields,\r\n          formError: `Username/Password combination is incorrect`\r\n        };\r\n      }\r\n      return createUserSession(user.id, redirectTo);\r\n    }\r\n    case \"register\": {\r\n      const userExists = await db.user.findFirst({\r\n        where: { username }\r\n      });\r\n      if (userExists) {\r\n        return badRequest({\r\n          fields,\r\n          formError: `User with username ${username} already exists`\r\n        });\r\n      }\r\n      // create the user\r\n      // create their session and redirect to /jokes\r\n      return badRequest({\r\n        fields,\r\n        formError: \"Not implemented\"\r\n      });\r\n    }\r\n    default: {\r\n      return badRequest({\r\n        fields,\r\n        formError: `Login type invalid`\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData<ActionData>();\r\n  const [searchParams] = useSearchParams();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content\" data-light=\"\">\r\n        <h1>Login</h1>\r\n        <form\r\n          method=\"post\"\r\n          aria-describedby={\r\n            actionData?.formError\r\n              ? \"form-error-message\"\r\n              : undefined\r\n          }\r\n        >\r\n          <input\r\n            type=\"hidden\"\r\n            name=\"redirectTo\"\r\n            value={\r\n              searchParams.get(\"redirectTo\") ?? undefined\r\n            }\r\n          />\r\n          <fieldset>\r\n            <legend className=\"sr-only\">\r\n              Login or Register?\r\n            </legend>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"loginType\"\r\n                value=\"login\"\r\n                defaultChecked={\r\n                  !actionData?.fields?.loginType ||\r\n                  actionData?.fields?.loginType === \"login\"\r\n                }\r\n              />{\" \"}\r\n              Login\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"loginType\"\r\n                value=\"register\"\r\n                defaultChecked={\r\n                  actionData?.fields?.loginType ===\r\n                  \"register\"\r\n                }\r\n              />{\" \"}\r\n              Register\r\n            </label>\r\n          </fieldset>\r\n          <div>\r\n            <label htmlFor=\"username-input\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username-input\"\r\n              name=\"username\"\r\n              defaultValue={actionData?.fields?.username}\r\n              aria-invalid={Boolean(\r\n                actionData?.fieldErrors?.username\r\n              )}\r\n              aria-describedby={\r\n                actionData?.fieldErrors?.username\r\n                  ? \"username-error\"\r\n                  : undefined\r\n              }\r\n            />\r\n            {actionData?.fieldErrors?.username ? (\r\n              <p\r\n                className=\"form-validation-error\"\r\n                role=\"alert\"\r\n                id=\"username-error\"\r\n              >\r\n                {actionData?.fieldErrors.username}\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password-input\">Password</label>\r\n            <input\r\n              id=\"password-input\"\r\n              name=\"password\"\r\n              defaultValue={actionData?.fields?.password}\r\n              type=\"password\"\r\n              aria-invalid={\r\n                Boolean(\r\n                  actionData?.fieldErrors?.password\r\n                ) || undefined\r\n              }\r\n              aria-describedby={\r\n                actionData?.fieldErrors?.password\r\n                  ? \"password-error\"\r\n                  : undefined\r\n              }\r\n            />\r\n            {actionData?.fieldErrors?.password ? (\r\n              <p\r\n                className=\"form-validation-error\"\r\n                role=\"alert\"\r\n                id=\"password-error\"\r\n              >\r\n                {actionData?.fieldErrors.password}\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div id=\"form-error-message\">\r\n            {actionData?.formError ? (\r\n              <p\r\n                className=\"form-validation-error\"\r\n                role=\"alert\"\r\n              >\r\n                {actionData?.formError}\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <button type=\"submit\" className=\"button\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"links\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/jokes\">Jokes</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAOA,gBAAmB;AACnB,qBAAyC;;;;;;AAGlC,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AA+FtB,iBAAiB;AA3GhC;AA4GE,QAAM,aAAa;AACnB,QAAM,CAAC,gBAAgB;AACvB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAU,cAAW;AAAA,KAClC,oCAAC,MAAD,MAAI,UACJ,oCAAC,QAAD;AAAA,IACE,QAAO;AAAA,IACP,oBACE,0CAAY,aACR,uBACA;AAAA,KAGN,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OACE,mBAAa,IAAI,kBAAjB,YAAkC;AAAA,MAGtC,oCAAC,YAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAAU,uBAG5B,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,gBACE,CAAC,gDAAY,WAAZ,mBAAoB,cACrB,gDAAY,WAAZ,mBAAoB,eAAc;AAAA,MAEnC,KAAI,UAGT,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,gBACE,gDAAY,WAAZ,mBAAoB,eACpB;AAAA,MAED,KAAI,cAIX,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,gBAAc,QACZ,+CAAY,gBAAZ,mBAAyB;AAAA,IAE3B,oBACE,gDAAY,gBAAZ,mBAAyB,YACrB,mBACA;AAAA,MAGP,gDAAY,gBAAZ,mBAAyB,YACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,yCAAY,YAAY,YAEzB,OAEN,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACE,QACE,+CAAY,gBAAZ,mBAAyB,aACtB;AAAA,IAEP,oBACE,gDAAY,gBAAZ,mBAAyB,YACrB,mBACA;AAAA,MAGP,gDAAY,gBAAZ,mBAAyB,YACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,yCAAY,YAAY,YAEzB,OAEN,oCAAC,OAAD;AAAA,IAAK,IAAG;AAAA,KACL,0CAAY,aACX,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,KAEJ,yCAAY,aAEb,OAEN,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS,aAK7C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MACE,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAI,UAEf,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAS;AAAA;",
  "names": []
}
